{"version":3,"sources":["store/index.ts","store/models/transactions.ts","App/styles..ts","components/Header/styles.ts","components/Header/index.tsx","components/Balance/index.tsx","utils/constants.ts","components/IncomeExpenses/styles.ts","components/IncomeExpenses/index.tsx","components/TransactionList/styles.ts","components/TransactionList/TransactionListItem/styles.ts","components/TransactionList/TransactionListItem/index.tsx","components/TransactionList/index.tsx","components/AddCategoryBar/styles.ts","components/AddCategoryModal/styles.ts","components/AddCategoryModal/AddCategoryListItem/styles.ts","components/AddCategoryModal/AddCategoryListItem/index.tsx","components/AddCategoryModal/index.tsx","components/AddCategoryBar/index.tsx","components/BottomAppBar/styles.ts","components/AddTransactionModal/styles.ts","components/AddTransactionModal/index.tsx","components/BottomAppBar/index.tsx","views/Home/index.tsx","views/Graphs/styles.ts","components/BarChart/index.tsx","components/PieChart/index.tsx","views/Graphs/index.tsx","App/index.tsx","index.tsx"],"names":["storeModel","transactions","items","category","graphdata","computed","state","reverse","totalBalance","reduce","acc","t","amount","toFixed","totalIncome","filter","totalExpense","addTransaction","action","payload","console","log","transaction","id","uuidv4","find","item","label","description","forEach","data","push","addCategory","saveTransactions","localStorage","setItem","JSON","stringify","loadTransactions","lsTransactions","getItem","parse","loadCategories","lsCategories","categories","saveCategories","saveGraphData","deleteCategory","index","findIndex","splice","loadGraphData","lsGraphdata","graphdatas","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","store","createStore","useStyles","makeStyles","root","height","overflow","position","marginBottom","display","justifyContent","paddingTop","paddingBottom","boxShadow","background","text","padding","color","fontSize","fontWeight","link","textDecoration","Header","classes","className","to","Balance","Typography","variant","colors","greenPrimary","green","redAccent","redPrimary","red","redSecondary","container","marginTop","flexDirection","valueContainer","flexGrow","alignItems","margin","divider","backgroundColor","incomeHeading","letterSpacing","expenseHeading","IncomeExpenses","Paper","elevation","component","listContainer","width","opacity","cursor","left","borderRadius","border","transition","redBorder","borderRight","greenBorder","TransactionListItem","ListItem","disableGutters","dense","clsx","TransactionList","Divider","List","map","key","theme","appBar","top","appBarLink","marginRight","borderBottom","linkActive","toolbar","minHeight","grow","fabButton","zIndex","right","paper","dialogContent","dialogActions","confirmButton","marginLeft","cancelButton","AddCategoryListItem","actions","title","onClick","AddCategoryModal","isOpen","close","useForm","register","handleSubmit","errors","reset","Dialog","open","onClose","fullWidth","maxWidth","DialogTitle","noValidate","onSubmit","DialogContent","TextField","InputLabelProps","shrink","placeholder","inputProps","name","ref","required","error","helperText","DialogActions","disableSpacing","Button","type","i","AddCategoryBar","useState","isCateggoryModalOpen","setIsCateggoryModalOpen","Toolbar","Fab","aria-label","AddTransactionModal","control","timestamp","DateTime","local","toMillis","date","select","onChange","e","value","target","MenuItem","BottomAppBar","isModalOpen","setIsModalOpen","Home","boldText","BarChart","scaleName","showGrid","showLine","showTicks","valueField","argumentField","PieChart","chartData","parseInt","Graph","length","App","window","addEventListener","preventDefault","useEffect","CssBaseline","Container","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b70bdf81.chunk.js","sourcesContent":["import { createStore, createTypedHooks } from 'easy-peasy'\nimport transactionsModel, { TransactionsModel } from './models/transactions'\n\nexport interface StoreModel {\n    transactions: TransactionsModel,\n  }\n  \n  const storeModel: StoreModel = {\n    transactions: transactionsModel\n  }\n  \n\n// Create typed hooks\nconst typedHooks = createTypedHooks<StoreModel>()\n// Export typed hooks\nexport const useStoreActions = typedHooks.useStoreActions\nexport const useStoreDispatch = typedHooks.useStoreDispatch\nexport const useStoreState = typedHooks.useStoreState\n\n\n\n// Create Store\nconst store = createStore(storeModel)\n\nexport default store\n","import { Transaction, NewTransaction } from '../../models'\nimport { Action, action, Computed, computed } from 'easy-peasy'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport interface TransactionsModel {\n  items: Transaction[],\n  category: string[],\n  graphdata: GraphData[],\n  transactions: Computed<TransactionsModel, Transaction[]>,\n  // categories: Computed<TransactionsModel, Array<string>>,\n  totalBalance: Computed<TransactionsModel, string>,\n  totalIncome: Computed<TransactionsModel, string>,\n  totalExpense: Computed<TransactionsModel, string>,\n  addTransaction: Action<TransactionsModel, NewTransaction>,\n  addCategory: Action<TransactionsModel, string>,\n  saveTransactions: Action<TransactionsModel, void>,\n  loadTransactions: Action<TransactionsModel, void>,\n  saveCategories: Action<TransactionsModel, void>,\n  loadCategories: Action<TransactionsModel, void>,\n  deleteCategory: Action<TransactionsModel, string>,\n  saveGraphData: Action<TransactionsModel, void>,\n  loadGraphData: Action<TransactionsModel, void>,\n}\n\ninterface GraphData {\n    label: string,\n    data: number,\n}\n\nconst transactionsModel: TransactionsModel = {\n\n  items: [],\n  category: [],\n  graphdata: [],\n\n  /* Computed */\n  transactions: computed((state) => state.items.reverse()),\n\n  // categories: computed((state) => state.category.reverse()),\n\n\n  totalBalance: computed((state) => {\n    return state.items.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\n  }),\n\n\n  totalIncome: computed((state) => {\n    const income = state.items.filter((t) => t.amount > 0)\n    return income.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\n  }),\n\n\n  totalExpense: computed((state) => {\n    const expenses = state.items.filter((t) => t.amount < 0)\n    return expenses.reduce((acc, t) => acc + t.amount, 0).toFixed(2)\n  }),\n\n\n  /* Actions */\n  addTransaction: action((state, payload) => {\n    console.log(\"inside addTransaction\")\n    const transaction: Transaction = {\n      id: uuidv4(),\n      ...payload,\n    }\n\n    const item = state.graphdata.find((item)=>item.label===payload.description)\n\n    if(item){\n      state.graphdata.forEach((item)=>{\n        if(item.label===payload.description)item.data+=payload.amount\n      })\n    }\n    else{\n      state.graphdata.push({label:payload.description, data:payload.amount})\n    }\n    \n    // if(state.graphdata[payload.description])state.graphdata[payload.description]+=payload.amount;\n    // else state.graphdata[payload.description]=payload.amount;\n\n\n    state.items.push(transaction)\n  }),\n\n  addCategory : action((state, payload) => {\n      const isPresent = state.category.find((item) => item === payload)\n      if(!isPresent)state.category.push(payload)\n  }),\n\n\n  saveTransactions: action((state) => {\n    /* Save state to localStorage */\n    localStorage.setItem('transactions', JSON.stringify(state.items))\n  }),\n\n\n\n  loadTransactions: action((state) => {\n    /* Retrieve transactions from localStorage */\n    const lsTransactions = localStorage.getItem('transactions')\n    if (lsTransactions) {\n      const transactions = JSON.parse(lsTransactions)\n      state.items = transactions\n    }\n  }),\n\n\n  loadCategories: action((state) => {\n    console.log('Inside Load Categoru')\n    const lsCategories = localStorage.getItem('categories')\n    if (lsCategories) {\n      const categories = JSON.parse(lsCategories)\n      state.category = categories\n    }\n  }),\n\n  saveCategories: action((state) => {\n    console.log('Inside SAve Categoru')\n    localStorage.setItem('categories', JSON.stringify(state.category))\n  }),\n\n\n  saveGraphData: action((state) => {\n    localStorage.setItem('graphdatas', JSON.stringify(state.graphdata))\n  }),\n\n\n  deleteCategory: action((state, payload) => {\n    const index = state.category.findIndex((t) => t === payload)\n    if (index !== -1) state.category.splice(index, 1)\n  }),\n\n\n\n\n  loadGraphData: action((state) => {\n    const lsGraphdata = localStorage.getItem('graphdatas')\n    if (lsGraphdata) {\n      const graphdatas = JSON.parse(lsGraphdata)\n      state.graphdata = graphdatas\n    }\n  }),\n}\n\nexport default transactionsModel\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"125vh\",\n    overflow: \"hidden\",\n    position: \"relative\",\n    marginBottom:'12%'\n  },\n});\n\nexport default useStyles;\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport grey from '@material-ui/core/colors/grey'\n\nconst useStyles = makeStyles({\n  root: {\n    display:'flex',\n    justifyContent:'center',\n    marginBottom:'3rem',\n    paddingTop:'0.8rem',\n    paddingBottom:'0.8rem',\n    boxShadow: '1px 10px #888888',\n    background:'#3f51b5',\n  },\n  text: {\n    padding: '1.5rem',\n    color: 'white',\n    fontSize:'1.4rem',\n    fontWeight:'bold'\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'white',\n  }\n})\n\nexport default useStyles\n","import React, { FC } from 'react'\nimport { Link } from 'react-router-dom'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport Typography from '@material-ui/core/Typography'\n\n\n\n\nconst Header: FC = () => {\n\n  const classes = useStyles()\n\n  return (\n      <div className={classes.root}>\n        <div className={classes.text}>\n        <Link to='/' className={classes.link}>\n                Home\n        </Link>\n        </div>\n        <div className={classes.text}>\n        <Link to='/graphs' className={classes.link}>\n            Graphs\n        </Link>\n        </div>\n    \n    </div>\n  )\n}\n\nexport default Header\n","import React, { FC } from 'react'\n/* Components */\nimport Typography from '@material-ui/core/Typography'\nimport { useStoreState } from '../../store'\n\n\nconst Balance: FC = () => {\n  const totalBalance = useStoreState(state => state.transactions.totalBalance)\n\n  return (\n    <>\n      <Typography variant='h6'>\n        Your Balance\n      </Typography>\n      <Typography variant='h4'>\n        {totalBalance}\n      </Typography>\n    </>\n  )\n}\n\nexport default Balance\n","import red from '@material-ui/core/colors/red'\nimport green from '@material-ui/core/colors/green'\n\nexport const colors = {\n  greenPrimary: green[600],\n  redAccent: '#f50057',\n  redPrimary: red[600],\n  redSecondary: red[700],\n}\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport { colors } from '../../utils/constants'\n\nconst useStyles = makeStyles({\n  container: {\n    padding: '.5rem',\n    marginTop: '1rem',\n    display: 'flex',\n    flexDirection:'column'\n  },\n  valueContainer: {\n    flexGrow: 1,\n    padding: '0.55rem',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin:'1rem'\n  },\n  divider: {\n    height: '50px',\n    backgroundColor: '#222',\n  },\n  incomeHeading: {\n    marginBottom: '0.5rem',\n    fontWeight: 'bold',\n    color: colors.greenPrimary,\n    letterSpacing: '1px',\n  },\n  expenseHeading: {\n    marginBottom: '0.5rem',\n    fontWeight: 'bold',\n    color: colors.redPrimary,\n    letterSpacing: '1px',\n  },\n})\n\nexport default useStyles\n","import React, { FC } from 'react'\n/* Redux */\nimport { useStoreState } from '../../store'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Divider from '@material-ui/core/Divider'\n\nconst IncomeExpenses: FC = () => {\n  const classes = useStyles()\n  const { totalIncome, totalExpense } = useStoreState(\n    (state) => state.transactions\n  )\n\n  return (\n    <Paper elevation={2} className={classes.container}>\n      <div className={classes.valueContainer}>\n        <Typography\n          variant='h5'\n          component='h2'\n          className={classes.incomeHeading}\n        >\n          Income\n        </Typography>\n        <Typography variant='h6' component='h4'>\n          +{totalIncome}\n        </Typography>\n      </div>\n                                                                                                                                                                                                \n      <div className={classes.valueContainer}>\n        <Typography\n          variant='h5'\n          component='h2'\n          className={classes.expenseHeading}\n        >\n          Expense\n        </Typography>\n        <Typography variant='h6' component='h4'>\n          {totalExpense}\n        </Typography>\n      </div>\n    </Paper>\n  )\n}\n\nexport default IncomeExpenses\n","import makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles({\n  container: {\n    marginTop: '2rem',\n  },\n  listContainer: {\n    height: '53vh',\n    overflow: 'auto',\n  },\n})\n\nexport default useStyles\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport { colors } from '../../../utils/constants'\n\nconst useStyles = makeStyles({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '90%',\n    margin: '0 auto',\n    padding: '1rem',\n    '& .deleteBtn': {\n      opacity: '0',\n      position: 'absolute',\n      cursor: 'pointer',\n      left: '-15px',\n      borderRadius: '4px',\n      border: `1px solid ${colors.greenPrimary}`,\n      background: colors.greenPrimary,\n      color: 'white',\n      padding: '2px 6px',\n      transition: 'opacity 0.2s ease-in',\n    },\n    '&:hover .deleteBtn': {\n      opacity: '1',\n    },\n  },\n  redBorder: {\n    borderRight: `0.5rem solid ${colors.redPrimary}`,\n  },\n  greenBorder: {\n    borderRight: `0.5rem solid ${colors.greenPrimary}`,\n  },\n})\n\nexport default useStyles\n","import React, { FC } from 'react'\nimport clsx from 'clsx'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport ListItem from '@material-ui/core/ListItem'\nimport Paper from '@material-ui/core/Paper'\n\ninterface TransactionListItemProps {\n  id: string,\n  description: string,\n  amount: number,\n}\n\nconst TransactionListItem: FC<TransactionListItemProps> = ({\n  id,\n  description,\n  amount,\n}) => {\n  const classes = useStyles()\n  return (\n    <ListItem disableGutters dense>\n      <Paper\n        elevation={2}\n        className={clsx(\n          classes.container,\n          amount > 0 ? classes.greenBorder : classes.redBorder\n        )}\n      >\n        <span>{description}</span>\n        <span>{amount}</span>\n      </Paper>\n    </ListItem>\n  )\n\n}\n\nexport default TransactionListItem\n","import React, { FC } from 'react'\n/* Redux */\nimport { useStoreState } from '../../store'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport Typography from '@material-ui/core/Typography'\nimport Divider from '@material-ui/core/Divider'\nimport List from '@material-ui/core/List'\nimport TransactionListItem from './TransactionListItem/index'\n\nconst TransactionList: FC = () => {\n  const transactions = useStoreState((state) => state.transactions.transactions)\n\n  const classes = useStyles()\n\n  return (\n    <div className={classes.container}>\n      <Typography variant='h5' component='h3'>Transactions:</Typography>\n      <Divider />\n      <List classes={{ root: classes.listContainer }}>\n        { transactions.map((t) => {\n            return (\n              <TransactionListItem\n                key={t.id}\n                id={t.id}\n                description={t.description}\n                amount={t.amount}\n              />\n            )\n          })\n        }\n      </List>\n    </div>\n  )\n}\n\nexport default TransactionList\n","import { colors } from './../../utils/constants';\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto !important',\n    height: '50px',\n    margin:'10px',\n    '& active': {\n      color: 'blue',\n    }\n  },\n  appBarLink: {\n    textDecoration: 'none',\n    fontSize: '1.1rem',\n    color: 'black',\n    marginRight: '10px',\n    borderBottom: `1px solid transparent`,\n    marginTop: '-10px',\n    transition: 'all .3s',\n    '&:hover, &:focus': {\n      color: colors.redSecondary,\n      borderBottom: `1px solid ${colors.redSecondary}`,\n    }\n  },\n  linkActive: {\n    color: colors.redSecondary,\n    borderBottom: `1px solid ${colors.redSecondary}`,\n  },\n  toolbar: {\n    borderRadius: '50px 50px 0 0',\n    background: 'transparent',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight:'100px !important',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -20,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n    color: colors.greenPrimary,\n  },\n  paper:{\n    marginTop:'5%',\n    marginBottom:'5%',\n    paddingTop:'3rem',\n    display: 'flex',\n    flexDirection:'row',\n    justifyContent:'center',\n  },\n  text:{\n    marginTop:'1rem',\n  }\n}))\n\nexport default useStyles\n","import { makeStyles } from \"@material-ui/core\"\nimport { colors } from '../../utils/constants'\n\nconst useStyles = makeStyles({\n  dialogContent: {\n    width: '75%',\n    margin: '0 auto',\n    marginBottom: '1rem',\n  },\n  dialogActions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingBottom: '1.5rem',\n    width: '70%',\n    margin: '0 auto',\n  },\n  confirmButton: {\n    background: colors.greenPrimary,\n    border: `1px solid ${colors.greenPrimary}`,\n    marginLeft: '1rem',\n    '& span': {\n      color: 'white',\n    },\n    '&:hover span': {\n      color: colors.greenPrimary,\n    }\n  },\n  cancelButton: {\n    fontSize: '0.8rem',\n    border:'1px solid black',\n    backgroundColor: 'gray',\n    color:'white'\n  },\n})\n\nexport default useStyles\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport { colors } from '../../../utils/constants'\n\nconst useStyles = makeStyles({\n  container: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '90%',\n    margin: '0 auto',\n    padding: '1rem',\n    '& .deleteBtn': {\n      opacity: '0',\n      position: 'absolute',\n      cursor: 'pointer',\n      left: '-15px',\n      borderRadius: '4px',\n      border: `1px solid ${colors.greenPrimary}`,\n      background: colors.greenPrimary,\n      color: 'white',\n      padding: '2px 6px',\n      transition: 'opacity 0.2s ease-in',\n    },\n    '&:hover .deleteBtn': {\n      opacity: '1',\n    },\n  },\n  redBorder: {\n    borderRight: `0.5rem solid ${colors.redPrimary}`,\n  },\n  greenBorder: {\n    borderRight: `0.5rem solid ${colors.greenPrimary}`,\n  },\n})\n\nexport default useStyles\n","import React, { FC } from 'react'\nimport clsx from 'clsx'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport ListItem from '@material-ui/core/ListItem'\nimport Paper from '@material-ui/core/Paper'\nimport { useStoreActions } from '../../../store'\n\ninterface AddCategoryListItemProps {\n  description: string,\n}\n\nconst AddCategoryListItem: FC<AddCategoryListItemProps> = ({\n  description,\n}) => {\n  const classes = useStyles()\n\n\n  const deleteCategory = useStoreActions(\n    (actions) => actions.transactions.deleteCategory\n  )\n\n  function handleDelete() {\n    deleteCategory(description)\n  }\n\n  return (\n    <ListItem disableGutters dense>\n      <Paper\n        elevation={2}\n        className={clsx(\n          classes.container,\n          classes.greenBorder\n        )}\n      >\n        <span>{description}</span>\n        <button\n          className='deleteBtn'\n          title='Delete transaction'\n          onClick={handleDelete}\n        >\n          x\n        </button>\n      </Paper>\n    </ListItem>\n  )\n\n}\n\nexport default AddCategoryListItem\n","import React, { FC } from 'react'\n/* Redux */\nimport { useStoreActions, useStoreState } from '../../store'\n/* Styles */\nimport useStyles from './styles'\nimport { NewTransaction } from '../../models'\nimport { useForm } from 'react-hook-form'\nimport { DateTime } from 'luxon'\n/* Components */\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport AddCategoryListItem from './AddCategoryListItem/index'\n\ninterface Inputs {\n  description: string,\n  amount: number,\n}\n\ninterface Props {\n  isOpen: boolean,\n  close: () => void,\n}\n\nconst AddCategoryModal: FC<Props> = ({ isOpen, close }) => {\n  const classes = useStyles()\n  const { register, handleSubmit, errors, reset } = useForm<Inputs>()\n  const addCategory = useStoreActions((actions) => actions.transactions.addCategory)\n\n  const category = useStoreState((state) => state.transactions.category)\n\n  const onSubmit = (data: Inputs) => {\n    const { description } = data\n\n    addCategory(description)\n    /* Clear form */\n    reset({})\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={close}\n        fullWidth={true}\n        maxWidth='sm'\n      >\n        <DialogTitle>Add Category</DialogTitle>\n\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent classes={{ root: classes.dialogContent }}>\n            {/* Description Field */}\n            <TextField\n              fullWidth={true}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label='Category Name'\n              placeholder='Enter Category Name...'\n              variant='outlined'\n              margin='normal'\n              inputProps={{\n                name: 'description',\n                ref: register({ required: true }),\n              }}\n              error={errors.description ? true : false}\n              helperText='This field is required'\n            />\n\n          </DialogContent>\n\n          <DialogActions classes={{ root: classes.dialogActions }} disableSpacing>\n            <Button onClick={close} color='inherit' classes={{ root: classes.cancelButton }}>\n              Cancel\n            </Button>\n            <Button type='submit' color='secondary' classes={{\n                root: classes.confirmButton,\n              }}\n            >\n              Add Category\n            </Button>\n          </DialogActions>\n\n        </form>\n        <DialogContent>\n\n            {category.map((item, i)=>{\n                return <AddCategoryListItem key={i} description={item}/>\n            })\n\n            }\n        </DialogContent>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default AddCategoryModal\n","import React, { FC, useState } from 'react'\n// import { NavLink } from 'react-router-dom'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport AddCategoryModal from '../AddCategoryModal'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Fab from '@material-ui/core/Fab'\nimport { Paper } from '@material-ui/core'\n\nconst AddCategoryBar: FC = () => {\n  const classes = useStyles()\n  const [isCateggoryModalOpen, setIsCateggoryModalOpen] = useState(false)\n\n  return (\n    <>\n      <AddCategoryModal\n        isOpen={isCateggoryModalOpen}\n        close={() => setIsCateggoryModalOpen(false)}\n      />\n      <Paper className={classes.paper}>\n       \n        <Toolbar classes={{ root: classes.toolbar }}>\n        <div className={classes.text}>Add Category</div>\n          <Fab\n            color='primary'\n            aria-label='add'\n            className={classes.fabButton}\n            onClick={handleFABClicked}\n          >\n            +\n          </Fab>\n        </Toolbar>\n        </Paper>\n    </>\n  )\n\n  /* Handlers */\n  function handleFABClicked(): void {\n    setIsCateggoryModalOpen(true)\n  }\n}\n\nexport default AddCategoryBar\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport { colors } from '../../utils/constants'\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    top: 'auto !important',\n    height: '50px',\n    margin:'10px',\n    '& active': {\n      color: 'blue',\n    }\n  },\n  appBarLink: {\n    textDecoration: 'none',\n    fontSize: '1.1rem',\n    color: 'black',\n    marginRight: '10px',\n    borderBottom: `1px solid transparent`,\n    marginTop: '-10px',\n    transition: 'all .3s',\n    '&:hover, &:focus': {\n      color: colors.redSecondary,\n      borderBottom: `1px solid ${colors.redSecondary}`,\n    }\n  },\n  linkActive: {\n    color: colors.redSecondary,\n    borderBottom: `1px solid ${colors.redSecondary}`,\n  },\n  toolbar: {\n    borderRadius: '50px 50px 0 0',\n    background: 'transparent',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight:'100px !important',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: -20,\n    left: 0,\n    right: 0,\n    margin: '0 auto',\n  },\n  paper:{\n    marginBottom:'5%',\n    paddingTop:'3rem',\n    display: 'flex',\n    flexDirection:'row',\n    justifyContent:'center',\n  },\n  text:{\n    marginTop:'1rem',\n  }\n}))\n\nexport default useStyles\n","import { colors } from './../../utils/constants';\nimport { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles({\n  dialogContent: {\n    width: '75%',\n    margin: '0 auto',\n    marginBottom: '1rem',\n  },\n  dialogActions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingBottom: '1.5rem',\n    width: '70%',\n    margin: '0 auto',\n  },\n  confirmButton: {\n    background: colors.greenPrimary,\n    border: `1px solid ${colors.greenPrimary}`,\n    marginLeft: '1rem',\n    '& span': {\n      color: 'white',\n    },\n    '&:hover span': {\n      color: colors.greenPrimary,\n    }\n  },\n  cancelButton: {\n    fontSize: '0.8rem',\n    border:'1px solid black',\n    backgroundColor: 'gray',\n    color:'white'\n  },\n})\n\nexport default useStyles\n","import React, { FC } from 'react'\n/* Redux */\nimport { useStoreActions, useStoreState } from '../../store'\n/* Styles */\nimport useStyles from './styles'\nimport { NewTransaction } from '../../models'\nimport { useForm, Controller } from 'react-hook-form'\nimport { DateTime } from 'luxon'\n/* Components */\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\ninterface Inputs {\n  description: string,\n  amount: number,\n}\n\ninterface Props {\n  isOpen: boolean,\n  close: () => void,\n}\n\nconst AddTransactionModal: FC<Props> = ({ isOpen, close }) => {\n  const classes = useStyles()\n  const { register, handleSubmit, errors, reset, control } = useForm<Inputs>()\n  const addTransaction = useStoreActions((actions) => actions.transactions.addTransaction)\n  const category = useStoreState((state) => state.transactions.category)\n\n  const onSubmit = (data: Inputs) => {\n    const { amount, description } = data\n    const timestamp = DateTime.local().toMillis()\n\n    const newTransaction: NewTransaction = {\n      description,\n      amount: +amount,\n      date: timestamp,\n    }\n\n    if(description)\n    {\n        addTransaction(newTransaction)\n        /* Clear form */\n        reset({})\n        /* Close Modal */\n        close()\n    }\n  }\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={close}\n        fullWidth={true}\n        maxWidth='sm'\n      >\n        <DialogTitle>Add Transaction</DialogTitle>\n\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <DialogContent classes={{ root: classes.dialogContent }}>\n            {/* Description Field */}\n            <TextField\n              select\n              fullWidth={true}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={e => register({ name: 'description', value: e.target.value })}\n              label='Description'\n              placeholder='Enter description...'\n              variant='outlined'\n              margin='normal' \n            >\n\n                {category.map((item, id)=>{\n                    return <MenuItem key={id} value={item}>{item}</MenuItem>\n                })\n\n                }\n            </TextField>\n\n            {/* Amount Field */}\n            <TextField\n              fullWidth={true}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              label='Amount'\n              placeholder='Enter amount...'\n              variant='outlined'\n              type='number'\n              margin='normal'\n              inputProps={{\n                name: 'amount',\n                ref: register({ required: true }),\n              }}\n              error={errors.amount ? true : false}\n              helperText={errors.amount ? 'Field is required' : 'Negative number for expense'}\n            />\n          </DialogContent>\n\n          <DialogActions classes={{ root: classes.dialogActions }} disableSpacing>\n            <Button onClick={close} color='inherit' classes={{ root: classes.cancelButton }}>\n              Cancel\n            </Button>\n            <Button type='submit' color='secondary' classes={{\n                root: classes.confirmButton,\n              }}\n            >\n              Add Transaction\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default AddTransactionModal\n","import React, { FC, useState } from 'react'\n// import { NavLink } from 'react-router-dom'\n/* Styles */\nimport useStyles from './styles'\n/* Components */\nimport AddTransactionModal from '../AddTransactionModal/index'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Fab from '@material-ui/core/Fab'\nimport { Paper } from '@material-ui/core'\n\nconst BottomAppBar: FC = () => {\n  const classes = useStyles()\n  const [isModalOpen, setIsModalOpen] = useState(false)\n\n  return (\n    <>\n      <AddTransactionModal\n        isOpen={isModalOpen}\n        close={() => setIsModalOpen(false)}\n      />\n       <Paper className={classes.paper}>\n\n          <Toolbar classes={{ root: classes.toolbar }}>\n\n            <div className={classes.text}>Add Transaction(Add positive number for Income and negative for Expense)</div>\n            <Fab\n                color='primary'\n                aria-label='add'\n                className={classes.fabButton}\n                onClick={handleFABClicked}\n            >\n                +\n            </Fab>\n           </Toolbar>\n\n      </Paper>\n    </>\n  )\n\n  /* Handlers */\n  function handleFABClicked(): void {\n    setIsModalOpen(true)\n  }\n}\n\nexport default BottomAppBar\n","import React, { FC } from 'react'\n/* Components */\nimport Balance from '../../components/Balance/index'\nimport IncomeExpenses from '../../components/IncomeExpenses/index'\nimport TransactionList from '../../components/TransactionList/index'\nimport AddCategoryBar from '../../components/AddCategoryBar/index'\nimport BottomAppBar from '../../components/BottomAppBar/index'\n\n\nconst Home: FC = () => {\n  return (\n    <>\n      <Balance />\n      <AddCategoryBar/>\n      <BottomAppBar/>\n      <IncomeExpenses />\n      <TransactionList />\n    </>\n  )\n}\n\nexport default Home\n","import { colors } from './../../utils/constants';\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nconst useStyles = makeStyles((theme) => ({\n  text:{\n    fontSize:'1.6rem',\n    margin: 'auto',\n    marginBottom:'2rem',\n    marginTop:'3rem'\n  },\n  container: {\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center',\n    height: '1000px',\n    paddingTop:'8rem'\n  },\n  boldText:{\n      fontSize:'4rem',\n      marginLeft:'7.7rem',\n      marginTop:'4rem'\n  }\n}))\n\nexport default useStyles\n","import * as React from \"react\";\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  BarSeries,\n  Chart,\n  PieSeries\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { ValueScale } from \"@devexpress/dx-react-chart\";\nimport Paper from '@material-ui/core/Paper'\nimport { useStoreState } from '../../store'\n\n\nconst BarChart: React.FC = () => {\n\n    const graphdata = useStoreState((state) => state.transactions.graphdata)\n\n    return (\n        <>\n        <Paper>\n        <Chart data={graphdata}>\n           <ValueScale name=\"data\" />\n          <ArgumentAxis />\n\n          <ValueAxis\n            scaleName=\"data\"\n            showGrid={false}\n            showLine={true}\n            showTicks={true}\n          />\n\n        <BarSeries\n            name=\"Catergory wise buy\"\n            valueField=\"data\"\n            argumentField=\"label\"\n            scaleName=\"data\"\n          />\n        </Chart>\n        </Paper>\n\n       \n   </>\n    );\n  \n}\n\nexport default BarChart;\n","import * as React from \"react\";\nimport {\n  ArgumentAxis,\n  ValueAxis,\n  Chart,\n  PieSeries\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { ValueScale } from \"@devexpress/dx-react-chart\";\nimport Paper from '@material-ui/core/Paper'\nimport { useStoreState } from '../../store'\n\n\ninterface DataItem {\n    label: string,\n    data: number,\n  }\n  \n\nconst PieChart: React.FC = () => {\n\n    const totalExpense = useStoreState((state) => state.transactions.totalExpense)\n    const totalIncome = useStoreState((state) => state.transactions.totalIncome)\n\n    const chartData: DataItem[] = [\n        {label:'totalExpense', data:-1*parseInt(totalExpense)},\n        {label:'totalIncome', data:parseInt(totalIncome)}\n    ]\n\n\n    const data = [\n        { label: 1, data: 10 },\n        { label: 2, data: 20 },\n        { label: 3, data: 30 },\n      ];\n\n    return (\n        <>\n        <Paper>\n            <Chart data={chartData}>\n          \n            <PieSeries\n                name=\"Expenses\"\n                valueField=\"data\"\n                argumentField=\"data\"\n            />\n\n            </Chart>\n        </Paper>\n   </>\n    );\n  \n}\n\nexport default PieChart;\n","import React, { FC, useState } from 'react'\nimport useStyles from './styles'\n/* Components */\nimport BarChart from '../../components/BarChart/index';\nimport PieChart from '../../components/PieChart/index'\nimport { useStoreState } from '../../store'\n\n\nconst Graph: FC = () => {\n    const classes = useStyles()\n  const graphdata = useStoreState((state) => state.transactions.graphdata)\n  \n\n  return (\n      <>\n      {graphdata.length>1?\n        <div className={classes.container}>\n            <div className={classes.text}>Expenses Per Category</div>\n            <BarChart/>\n            <div className={classes.text}>Expenses vs Income</div>\n            <PieChart/>\n        </div>\n        : <div className={classes.boldText}>Add More Data</div>\n      }\n      </>\n\n  )\n}\n\nexport default Graph\n","import React, { FC, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\n/* Redux */\nimport { useStoreActions } from '../store'\n/* Styles */\nimport useStyles from './styles.'\n/* Components */\nimport Header from '../components/Header/index'\n/* Views */\nimport Home from '../views/Home/index'\nimport Graph from '../views/Graphs/index'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\n\n\nconst App: FC = () => {\n  const classes = useStyles()\n\n  const { saveTransactions, loadTransactions, saveCategories, loadCategories, saveGraphData, loadGraphData } = useStoreActions(\n    (actions) => actions.transactions\n  )\n\n  /* Before refresh/closing tab save data to localStorage */\n  window.addEventListener('beforeunload', (e) => {\n    e.preventDefault()\n    saveTransactions()\n    saveCategories()\n    saveGraphData()\n  })\n\n  useEffect(() => {\n    /* Load transactions from localStorage */\n    loadTransactions()\n  }, [loadTransactions])\n\n  useEffect(() => {\n    loadCategories()\n  }, [loadCategories])\n\n  useEffect(() => {\n    loadGraphData()\n  }, [loadGraphData])\n\n  return (\n    <>\n      {/* Material-UI css rest */}\n      <Header/>\n      <CssBaseline />\n      <Container maxWidth='lg' className={classes.root}>\n\n        <Switch>\n          <Route exact path='/' component={Home} />\n        </Switch>\n  \n        <Switch>\n          <Route exact path='/graphs' component={Graph} />\n        </Switch>\n\n\n\n        {/* <BottomAppBar /> */}\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\n/* Redux */\nimport { StoreProvider } from 'easy-peasy'\nimport store from './store'\n/* Components */\nimport App from './App/index'\n\nReactDOM.render(\n  <StoreProvider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}